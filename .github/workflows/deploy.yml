name: "üöÄ Deploy Stage 5 to VDS"

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      VDS_HOST: ${{ secrets.VDS_HOST }}
      VDS_USER: ${{ secrets.VDS_USER }}
      APP_DOMAIN: ${{ secrets.APP_DOMAIN }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # –ö–ª—é—á —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ —Å–µ–∫—Ä–µ—Ç–µ –≤ BASE64. –î–µ–∫–æ–¥–∏—Ä—É–µ–º –≤ —Ñ–∞–π–ª –∏ –¥–æ–±–∞–≤–ª—è–µ–º known_hosts.
      - name: Setup SSH key from BASE64 secret
        shell: bash
        env:
          KEY_B64: ${{ secrets.VDS_SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$KEY_B64" | base64 -d > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H "$VDS_HOST" >> ~/.ssh/known_hosts

      # –ì–æ—Ç–æ–≤–∏–º —Å–µ—Ä–≤–µ—Ä: —Å—Ç–∞–≤–∏–º rsync/docker/nginx/certbot, –≤–∫–ª—é—á–∞–µ–º docker, —Å–æ–∑–¥–∞—ë–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
      - name: Prepare server (install packages & dirs)
        shell: bash
        run: |
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no ${VDS_USER}@${VDS_HOST} << 'EOF'
            set -e
            apt-get update
            DEBIAN_FRONTEND=noninteractive apt-get install -y \
              rsync docker.io docker-compose-plugin nginx certbot python3-certbot-nginx curl

            systemctl enable docker || true
            systemctl start docker || true

            mkdir -p /root/projects/bezperson/app
            # ES —Ç—Ä–µ–±—É–µ—Ç –ø–æ–¥–Ω—è—Ç—ã–π –ª–∏–º–∏—Ç
            sysctl -w vm.max_map_count=262144 || true
            if [ ! -f /etc/sysctl.d/99-elasticsearch.conf ]; then
              echo 'vm.max_map_count=262144' > /etc/sysctl.d/99-elasticsearch.conf || true
              sysctl --system || true
            fi
          EOF

      # –ó–∞–ª–∏–≤–∞–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä –ø–æ rsync (–±–µ–∑ .git –∏ node_modules)
      - name: Rsync project to VDS
        shell: bash
        run: |
          rsync -az --delete \
            -e "ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no" \
            --exclude ".git" \
            --exclude "node_modules" \
            ./ ${VDS_USER}@${VDS_HOST}:/root/projects/bezperson/app

      # –î–µ–ø–ª–æ–π: docker compose build/up, nginx –∫–æ–Ω—Ñ–∏–≥ –∏ SSL, healthchecks
      - name: Deploy via SSH
        shell: bash
        run: |
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no ${VDS_USER}@${VDS_HOST} << 'EOF'
            set -e
            cd /root/projects/bezperson/app

            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º, –µ—Å–ª–∏ —É–∂–µ –±–µ–∂–∏—Ç (–Ω–µ –ø–∞–¥–∞–µ–º, –µ—Å–ª–∏ –Ω–µ—Ç)
            docker compose down || true

            # –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫
            docker compose build
            docker compose up -d

            # –ü—Ä–∏–º–µ–Ω—è–µ–º nginx-–∫–æ–Ω—Ñ–∏–≥, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å –≤ —Ä–µ–ø–æ
            if [ -f nginx/nginx-cite.conf ]; then
              cp -f nginx/nginx-cite.conf /etc/nginx/sites-available/cite.conf || true
              ln -sf /etc/nginx/sites-available/cite.conf /etc/nginx/sites-enabled/cite.conf || true
              nginx -t && systemctl reload nginx || true
            fi

            # SSL (–∏–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω–æ)
            if command -v certbot >/dev/null 2>&1; then
              certbot --nginx -d ${APP_DOMAIN} --register-unsafely-without-email --agree-tos || true
            fi

            # –õ–æ–∫–∞–ª—å–Ω—ã–π healthcheck –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            if ! curl -fsS http://127.0.0.1:3000/api/health >/dev/null; then
              echo '--- WEB LOGS ---'
              docker compose logs --no-color web || true
              exit 1
            fi
            echo "OK: local app health is fine"
          EOF

      # –ü—É–±–ª–∏—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ –¥–æ–º–µ–Ω—É (—á–µ—Ä–µ–∑ Nginx/SSL)
      - name: Public health check via domain
        shell: bash
        run: |
          curl -I https://${{ env.APP_DOMAIN }}/api/health || exit 1
